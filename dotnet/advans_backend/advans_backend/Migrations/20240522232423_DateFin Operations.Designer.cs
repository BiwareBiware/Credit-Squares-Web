// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using advans_backend.Data;

#nullable disable

namespace advans_backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240522232423_DateFin Operations")]
    partial class DateFinOperations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("advans_backend.Models.ActiviteEntreprise", b =>
                {
                    b.Property<int>("IdActivite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdActivite"));

                    b.Property<string>("NomActivite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdActivite");

                    b.ToTable("RefActiviteEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.ActiviteParticulier", b =>
                {
                    b.Property<int>("IdActivite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdActivite"));

                    b.Property<string>("NomActivite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdActivite");

                    b.ToTable("RefActiviteParticulier");
                });

            modelBuilder.Entity("advans_backend.Models.Analyse", b =>
                {
                    b.Property<int>("IdAnalyse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAnalyse"));

                    b.Property<string>("AnalyseRisqueCommercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvisStabiliteClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateDebutAnalyse")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFinAnalyse")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DureeAnalyse")
                        .HasColumnType("int");

                    b.Property<string>("ExplicationChoix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HistoriqueCreditClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hypothese")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDemande")
                        .HasColumnType("int");

                    b.Property<string>("MontantPropose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumVersion")
                        .HasColumnType("int");

                    b.Property<string>("PertinenceProjet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TautInteret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilisationComptes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAnalyse");

                    b.HasIndex("IdDemande")
                        .IsUnique();

                    b.ToTable("Analyses");
                });

            modelBuilder.Entity("advans_backend.Models.Appro", b =>
                {
                    b.Property<int>("IdAppro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAppro"));

                    b.Property<string>("Frequence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdClientEntreprise")
                        .HasColumnType("int");

                    b.Property<long?>("MontantMoyen")
                        .HasColumnType("bigint");

                    b.HasKey("IdAppro");

                    b.HasIndex("IdClientEntreprise");

                    b.ToTable("Approvisionnements");
                });

            modelBuilder.Entity("advans_backend.Models.CheckList", b =>
                {
                    b.Property<int>("IdCheckList")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCheckList"));

                    b.Property<DateTime?>("DateDebutCheckList")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFinCheckList")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DureeCheckList")
                        .HasColumnType("int");

                    b.Property<int>("IdDemande")
                        .HasColumnType("int");

                    b.Property<string>("VerifAutorisationActivite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifClientPolitique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifConditionsGenSigne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifContratCreditSigne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifContratGarantieSigne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifFicheClientSigne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifFicheGarantSigne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifFormDemandeSigne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifIDClient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifIDGarant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifLocalClient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifPhotoClient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifPhotoGarant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCheckList");

                    b.HasIndex("IdDemande")
                        .IsUnique();

                    b.ToTable("CheckLists");
                });

            modelBuilder.Entity("advans_backend.Models.ClientEntreprise", b =>
                {
                    b.Property<int>("IdClientEntreprise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClientEntreprise"));

                    b.Property<string>("ChiffreAffaireMensuel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Cycle")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCreationEntreprise")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDerniereVisite")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gestionnaire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdActivite")
                        .HasColumnType("int");

                    b.Property<int?>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int?>("IdSecteurActivite")
                        .HasColumnType("int");

                    b.Property<int?>("IdSituationImmobilierEntreprise")
                        .HasColumnType("int");

                    b.Property<int?>("IdSousActivite")
                        .HasColumnType("int");

                    b.Property<string>("IdentiteClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterlocuteurPrincipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NbrCreditBeneficies")
                        .HasColumnType("int");

                    b.Property<int?>("NbrPointsVente")
                        .HasColumnType("int");

                    b.Property<string>("NomActivite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomAgence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomSecteurActivite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomSousActivite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NombreEmployes")
                        .HasColumnType("int");

                    b.Property<string>("RaisonSociale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Segment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SituationImmobilier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SousActiviteEntrepriseIdSousActivite")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ville")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClientEntreprise");

                    b.HasIndex("IdActivite");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdSecteurActivite");

                    b.HasIndex("IdSituationImmobilierEntreprise");

                    b.HasIndex("SousActiviteEntrepriseIdSousActivite");

                    b.ToTable("ClientsEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.ClientParticulier", b =>
                {
                    b.Property<int>("IdClientParticulier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClientParticulier"));

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AutresRevenusMensuel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Cycle")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDerniereVisite")
                        .HasColumnType("datetime2");

                    b.Property<string>("FonctionProfessionnelle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gestionnaire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdActivite")
                        .HasColumnType("int");

                    b.Property<int?>("IdAgence")
                        .HasColumnType("int");

                    b.Property<int?>("IdSecteurActivite")
                        .HasColumnType("int");

                    b.Property<int?>("IdSituationFamilialeParticulier")
                        .HasColumnType("int");

                    b.Property<int?>("IdSituationImmobilierParticulier")
                        .HasColumnType("int");

                    b.Property<int?>("IdSousActivite")
                        .HasColumnType("int");

                    b.Property<string>("IdentiteClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NbrCreditBeneficies")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomActivite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomAgence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomSecteurActivite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomSousActivite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalaireNetMensuel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Segment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SituationFamiliale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SituationImmobilier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ville")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClientParticulier");

                    b.HasIndex("IdActivite");

                    b.HasIndex("IdAgence");

                    b.HasIndex("IdSecteurActivite");

                    b.HasIndex("IdSituationFamilialeParticulier");

                    b.HasIndex("IdSituationImmobilierParticulier");

                    b.HasIndex("IdSousActivite");

                    b.ToTable("ClientsParticulier");
                });

            modelBuilder.Entity("advans_backend.Models.Comite", b =>
                {
                    b.Property<int>("IdComite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComite"));

                    b.Property<string>("Commentaires")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateDebutComite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFinComite")
                        .HasColumnType("datetime2");

                    b.Property<string>("Decision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DureeComite")
                        .HasColumnType("int");

                    b.Property<int>("IdDemande")
                        .HasColumnType("int");

                    b.Property<string>("Montant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Raison")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdComite");

                    b.HasIndex("IdDemande")
                        .IsUnique();

                    b.ToTable("Comites");
                });

            modelBuilder.Entity("advans_backend.Models.CompteBancaireEntreprise", b =>
                {
                    b.Property<int>("idCompteBanq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCompteBanq"));

                    b.Property<string>("Banque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdClientEntreprise")
                        .HasColumnType("int");

                    b.Property<string>("Solde")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeCompte")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCompteBanq");

                    b.HasIndex("IdClientEntreprise");

                    b.ToTable("ComptesBancaireEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.CompteBancaireParticulier", b =>
                {
                    b.Property<int>("idCompte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCompte"));

                    b.Property<string>("Banque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdClientParticulier")
                        .HasColumnType("int");

                    b.Property<string>("Solde")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeCompte")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCompte");

                    b.HasIndex("IdClientParticulier");

                    b.ToTable("ComptesBancaireParticulier");
                });

            modelBuilder.Entity("advans_backend.Models.CompteEntreprise", b =>
                {
                    b.Property<int?>("IdCompteEntreprise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("IdCompteEntreprise"));

                    b.Property<DateTime?>("DateOuvertureCompte")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviseCompte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdClientEntreprise")
                        .HasColumnType("int");

                    b.HasKey("IdCompteEntreprise");

                    b.HasIndex("IdClientEntreprise")
                        .IsUnique()
                        .HasFilter("[IdClientEntreprise] IS NOT NULL");

                    b.ToTable("CompteEntre");
                });

            modelBuilder.Entity("advans_backend.Models.CompteParticulier", b =>
                {
                    b.Property<int?>("IdCompteParticulier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("IdCompteParticulier"));

                    b.Property<DateTime?>("DateOuvertureCompte")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviseCompte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdClientParticulier")
                        .HasColumnType("int");

                    b.HasKey("IdCompteParticulier");

                    b.HasIndex("IdClientParticulier")
                        .IsUnique()
                        .HasFilter("[IdClientParticulier] IS NOT NULL");

                    b.ToTable("ComptePar");
                });

            modelBuilder.Entity("advans_backend.Models.CreditRecentEntreprise", b =>
                {
                    b.Property<int>("idCRecent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCRecent"));

                    b.Property<string>("Duree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnCoursRestant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdClientEntreprise")
                        .HasColumnType("int");

                    b.Property<string>("MontantEchMens")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MontantInitial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NbrEchEnRetard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NbrEchRestant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NbrMaxJoursEnRetard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCRecent");

                    b.HasIndex("IdClientEntreprise");

                    b.ToTable("CreditRecentsEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.CreditRecentParticulier", b =>
                {
                    b.Property<int>("idCRecent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCRecent"));

                    b.Property<string>("Duree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnCoursRestant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdClientParticulier")
                        .HasColumnType("int");

                    b.Property<string>("MontantEchMens")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MontantInitial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NbrEchEnRetard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NbrEchRestant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NbrMaxJoursEnRetard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCRecent");

                    b.HasIndex("IdClientParticulier");

                    b.ToTable("CreditRecentsParticulier");
                });

            modelBuilder.Entity("advans_backend.Models.DemandeCredit", b =>
                {
                    b.Property<int>("IdDemande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDemande"));

                    b.Property<string>("Commentaires")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateDemande")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFinalisation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disponibilite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DureeDemandee")
                        .HasColumnType("int");

                    b.Property<int?>("IdClientEntreprise")
                        .HasColumnType("int");

                    b.Property<int?>("IdClientParticulier")
                        .HasColumnType("int");

                    b.Property<int?>("IdProduit")
                        .HasColumnType("int");

                    b.Property<string>("IdentiteClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Montant")
                        .HasColumnType("int");

                    b.Property<string>("NomAgence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomProduit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeClient")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDemande");

                    b.HasIndex("IdClientEntreprise");

                    b.HasIndex("IdClientParticulier");

                    b.HasIndex("IdProduit");

                    b.ToTable("Demande_credit");
                });

            modelBuilder.Entity("advans_backend.Models.Depense", b =>
                {
                    b.Property<int>("idDepense")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDepense"));

                    b.Property<string>("CoutTotal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Depenses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdClientEntreprise")
                        .HasColumnType("int");

                    b.HasKey("idDepense");

                    b.HasIndex("IdClientEntreprise");

                    b.ToTable("Depenses");
                });

            modelBuilder.Entity("advans_backend.Models.Garant", b =>
                {
                    b.Property<int?>("idGarant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("idGarant"));

                    b.Property<int?>("IdDemande")
                        .HasColumnType("int");

                    b.Property<int?>("IdRelationClientGarant")
                        .HasColumnType("int");

                    b.Property<string>("IdentiteGarant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomGarant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ValeurBasse")
                        .HasColumnType("bigint");

                    b.Property<long?>("ValeurMoyenne")
                        .HasColumnType("bigint");

                    b.HasKey("idGarant");

                    b.HasIndex("IdDemande");

                    b.HasIndex("IdRelationClientGarant");

                    b.ToTable("Garants");
                });

            modelBuilder.Entity("advans_backend.Models.Garantie", b =>
                {
                    b.Property<int?>("idGarantie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("idGarantie"));

                    b.Property<int?>("IdDemande")
                        .HasColumnType("int");

                    b.Property<int?>("IdTypeGarantie")
                        .HasColumnType("int");

                    b.Property<string>("Proprietaire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Valeur_estime")
                        .HasColumnType("bigint");

                    b.HasKey("idGarantie");

                    b.HasIndex("IdDemande");

                    b.HasIndex("IdTypeGarantie");

                    b.ToTable("Garanties");
                });

            modelBuilder.Entity("advans_backend.Models.InteractiviteDecideur", b =>
                {
                    b.Property<int>("IdInterDecideur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInterDecideur"));

                    b.Property<string>("Decideur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdComite")
                        .HasColumnType("int");

                    b.Property<int>("IdDemande")
                        .HasColumnType("int");

                    b.Property<string>("Remarque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reponse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdInterDecideur");

                    b.HasIndex("IdComite");

                    b.ToTable("InteractivitesDecideur");
                });

            modelBuilder.Entity("advans_backend.Models.PointVente", b =>
                {
                    b.Property<int>("idPV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPV"));

                    b.Property<string>("Emplacement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdClientEntreprise")
                        .HasColumnType("int");

                    b.Property<int?>("IdTypePointVente")
                        .HasColumnType("int");

                    b.Property<string>("NbrJoursOuverture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Propriete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surface")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPV");

                    b.HasIndex("IdClientEntreprise");

                    b.HasIndex("IdTypePointVente");

                    b.ToTable("PointsVente");
                });

            modelBuilder.Entity("advans_backend.Models.Produit", b =>
                {
                    b.Property<int>("IdProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduit"));

                    b.Property<string>("NomProduit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProduit");

                    b.ToTable("RefProduit");
                });

            modelBuilder.Entity("advans_backend.Models.RefAgence", b =>
                {
                    b.Property<int>("IdAgence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgence"));

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomAgence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAgence");

                    b.ToTable("RefAgences");
                });

            modelBuilder.Entity("advans_backend.Models.ReferentFamiliaux", b =>
                {
                    b.Property<int>("idRefFam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idRefFam"));

                    b.Property<int?>("IdClientParticulier")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRefFam");

                    b.HasIndex("IdClientParticulier");

                    b.ToTable("ReferentsFamiliaux");
                });

            modelBuilder.Entity("advans_backend.Models.RelationClientGarant", b =>
                {
                    b.Property<int>("IdRelationClientGarant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRelationClientGarant"));

                    b.Property<string>("Relation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRelationClientGarant");

                    b.ToTable("RefRelationClientGarant");
                });

            modelBuilder.Entity("advans_backend.Models.RisqueAnalyse", b =>
                {
                    b.Property<int>("IdRA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRA"));

                    b.Property<string>("Commentaires")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateDebutRA")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFinRA")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DureeRA")
                        .HasColumnType("int");

                    b.Property<string>("EvalGaranties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvalProjet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvalRisqueClient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvalRisqueCommercial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDemande")
                        .HasColumnType("int");

                    b.Property<string>("RecommandationAnalyste")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRA");

                    b.HasIndex("IdDemande")
                        .IsUnique();

                    b.ToTable("RisqueAnalyses");
                });

            modelBuilder.Entity("advans_backend.Models.SecteurActiviteEntreprise", b =>
                {
                    b.Property<int>("IdSecteurActivite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSecteurActivite"));

                    b.Property<string>("NomSecteur")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSecteurActivite");

                    b.ToTable("RefSecteurActiviteEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.SecteurActiviteParticulier", b =>
                {
                    b.Property<int>("IdSecteurActivite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSecteurActivite"));

                    b.Property<string>("NomSecteur")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSecteurActivite");

                    b.ToTable("RefSecteurActiviteParticulier");
                });

            modelBuilder.Entity("advans_backend.Models.SituationFamilialeParticulier", b =>
                {
                    b.Property<int>("IdSituationFamilialeParticulier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSituationFamilialeParticulier"));

                    b.Property<string>("Situation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSituationFamilialeParticulier");

                    b.ToTable("RefSituationFamilialeParticulier");
                });

            modelBuilder.Entity("advans_backend.Models.SituationImmobilierEntreprise", b =>
                {
                    b.Property<int>("IdSituationImmobilierEntreprise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSituationImmobilierEntreprise"));

                    b.Property<string>("Situation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSituationImmobilierEntreprise");

                    b.ToTable("RefSituationImmobilierEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.SituationImmobilierParticulier", b =>
                {
                    b.Property<int>("IdSituationImmobilierParticulier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSituationImmobilierParticulier"));

                    b.Property<string>("Situation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSituationImmobilierParticulier");

                    b.ToTable("RefSituationImmobilierParticulier");
                });

            modelBuilder.Entity("advans_backend.Models.SousActiviteEntreprise", b =>
                {
                    b.Property<int>("IdSousActivite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSousActivite"));

                    b.Property<string>("NomSousActivite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSousActivite");

                    b.ToTable("RefSousActiviteEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.SousActiviteParticulier", b =>
                {
                    b.Property<int>("IdSousActivite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSousActivite"));

                    b.Property<string>("NomSousActivite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSousActivite");

                    b.ToTable("RefSousActiviteParticulier");
                });

            modelBuilder.Entity("advans_backend.Models.TypeGarantie", b =>
                {
                    b.Property<int>("IdTypeGarantie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTypeGarantie"));

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTypeGarantie");

                    b.ToTable("RefTypeGarantieGarant");
                });

            modelBuilder.Entity("advans_backend.Models.TypePointVente", b =>
                {
                    b.Property<int>("IdTypePointVente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTypePointVente"));

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTypePointVente");

                    b.ToTable("RefTypePointVente");
                });

            modelBuilder.Entity("advans_backend.Models.Vente", b =>
                {
                    b.Property<int>("idvente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idvente"));

                    b.Property<string>("Frequence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdClientEntreprise")
                        .HasColumnType("int");

                    b.Property<long?>("ValeurBasse")
                        .HasColumnType("bigint");

                    b.Property<long?>("ValeurHaute")
                        .HasColumnType("bigint");

                    b.Property<long?>("ValeurMoyenne")
                        .HasColumnType("bigint");

                    b.HasKey("idvente");

                    b.HasIndex("IdClientEntreprise");

                    b.ToTable("Ventes");
                });

            modelBuilder.Entity("advans_backend.Models.VisiteManagement", b =>
                {
                    b.Property<int>("IdVM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVM"));

                    b.Property<string>("AvisDecideur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateDebutVM")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFinVM")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DureeVM")
                        .HasColumnType("int");

                    b.Property<string>("ElementAverifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementRecueillis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDemande")
                        .HasColumnType("int");

                    b.HasKey("IdVM");

                    b.HasIndex("IdDemande")
                        .IsUnique();

                    b.ToTable("VisiteManagements");
                });

            modelBuilder.Entity("advans_backend.Models.user", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("advans_backend.Models.Analyse", b =>
                {
                    b.HasOne("advans_backend.Models.DemandeCredit", "Demande")
                        .WithOne("Analyse")
                        .HasForeignKey("advans_backend.Models.Analyse", "IdDemande")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demande");
                });

            modelBuilder.Entity("advans_backend.Models.Appro", b =>
                {
                    b.HasOne("advans_backend.Models.ClientEntreprise", "ClientEntreprise")
                        .WithMany()
                        .HasForeignKey("IdClientEntreprise");

                    b.Navigation("ClientEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.CheckList", b =>
                {
                    b.HasOne("advans_backend.Models.DemandeCredit", "Demande")
                        .WithOne("CheckList")
                        .HasForeignKey("advans_backend.Models.CheckList", "IdDemande")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demande");
                });

            modelBuilder.Entity("advans_backend.Models.ClientEntreprise", b =>
                {
                    b.HasOne("advans_backend.Models.ActiviteEntreprise", "Activite")
                        .WithMany("ClientsEntreprise")
                        .HasForeignKey("IdActivite");

                    b.HasOne("advans_backend.Models.RefAgence", "Agence")
                        .WithMany("ClientEntreprises")
                        .HasForeignKey("IdAgence");

                    b.HasOne("advans_backend.Models.SecteurActiviteEntreprise", "SecteurActivite")
                        .WithMany("ClientsEntreprise")
                        .HasForeignKey("IdSecteurActivite");

                    b.HasOne("advans_backend.Models.SituationImmobilierEntreprise", "SituationImmobilierEntreprise")
                        .WithMany("ClientsEntreprise")
                        .HasForeignKey("IdSituationImmobilierEntreprise");

                    b.HasOne("advans_backend.Models.SousActiviteEntreprise", null)
                        .WithMany("ClientsEntreprise")
                        .HasForeignKey("SousActiviteEntrepriseIdSousActivite");

                    b.Navigation("Activite");

                    b.Navigation("Agence");

                    b.Navigation("SecteurActivite");

                    b.Navigation("SituationImmobilierEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.ClientParticulier", b =>
                {
                    b.HasOne("advans_backend.Models.ActiviteParticulier", "Activite")
                        .WithMany("ClientParticuliers")
                        .HasForeignKey("IdActivite");

                    b.HasOne("advans_backend.Models.RefAgence", "RefAgence")
                        .WithMany("ClientParticuliers")
                        .HasForeignKey("IdAgence");

                    b.HasOne("advans_backend.Models.SecteurActiviteParticulier", "SecteurActivite")
                        .WithMany("ClientParticuliers")
                        .HasForeignKey("IdSecteurActivite");

                    b.HasOne("advans_backend.Models.SituationFamilialeParticulier", "SituationFamilialeParticulier")
                        .WithMany("ClientParticuliers")
                        .HasForeignKey("IdSituationFamilialeParticulier");

                    b.HasOne("advans_backend.Models.SituationImmobilierParticulier", "SituationImmobilierParticulier")
                        .WithMany("ClientParticuliers")
                        .HasForeignKey("IdSituationImmobilierParticulier");

                    b.HasOne("advans_backend.Models.SousActiviteParticulier", "SousActivite")
                        .WithMany("ClientParticuliers")
                        .HasForeignKey("IdSousActivite");

                    b.Navigation("Activite");

                    b.Navigation("RefAgence");

                    b.Navigation("SecteurActivite");

                    b.Navigation("SituationFamilialeParticulier");

                    b.Navigation("SituationImmobilierParticulier");

                    b.Navigation("SousActivite");
                });

            modelBuilder.Entity("advans_backend.Models.Comite", b =>
                {
                    b.HasOne("advans_backend.Models.DemandeCredit", "Demande")
                        .WithOne("Comite")
                        .HasForeignKey("advans_backend.Models.Comite", "IdDemande")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demande");
                });

            modelBuilder.Entity("advans_backend.Models.CompteBancaireEntreprise", b =>
                {
                    b.HasOne("advans_backend.Models.ClientEntreprise", "ClientEntreprise")
                        .WithMany()
                        .HasForeignKey("IdClientEntreprise");

                    b.Navigation("ClientEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.CompteBancaireParticulier", b =>
                {
                    b.HasOne("advans_backend.Models.ClientParticulier", "ClientParticulier")
                        .WithMany()
                        .HasForeignKey("IdClientParticulier");

                    b.Navigation("ClientParticulier");
                });

            modelBuilder.Entity("advans_backend.Models.CompteEntreprise", b =>
                {
                    b.HasOne("advans_backend.Models.ClientEntreprise", "ClientEntreprise")
                        .WithOne("Compte")
                        .HasForeignKey("advans_backend.Models.CompteEntreprise", "IdClientEntreprise");

                    b.Navigation("ClientEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.CompteParticulier", b =>
                {
                    b.HasOne("advans_backend.Models.ClientParticulier", "ClientParticulier")
                        .WithOne("Compte")
                        .HasForeignKey("advans_backend.Models.CompteParticulier", "IdClientParticulier");

                    b.Navigation("ClientParticulier");
                });

            modelBuilder.Entity("advans_backend.Models.CreditRecentEntreprise", b =>
                {
                    b.HasOne("advans_backend.Models.ClientEntreprise", "ClientEntreprise")
                        .WithMany()
                        .HasForeignKey("IdClientEntreprise");

                    b.Navigation("ClientEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.CreditRecentParticulier", b =>
                {
                    b.HasOne("advans_backend.Models.ClientParticulier", "ClientParticulier")
                        .WithMany()
                        .HasForeignKey("IdClientParticulier");

                    b.Navigation("ClientParticulier");
                });

            modelBuilder.Entity("advans_backend.Models.DemandeCredit", b =>
                {
                    b.HasOne("advans_backend.Models.ClientEntreprise", "ClientEntreprise")
                        .WithMany()
                        .HasForeignKey("IdClientEntreprise");

                    b.HasOne("advans_backend.Models.ClientParticulier", "ClientParticulier")
                        .WithMany()
                        .HasForeignKey("IdClientParticulier");

                    b.HasOne("advans_backend.Models.Produit", "Produit")
                        .WithMany("DemandeCredit")
                        .HasForeignKey("IdProduit");

                    b.Navigation("ClientEntreprise");

                    b.Navigation("ClientParticulier");

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("advans_backend.Models.Depense", b =>
                {
                    b.HasOne("advans_backend.Models.ClientEntreprise", "ClientEntreprise")
                        .WithMany()
                        .HasForeignKey("IdClientEntreprise");

                    b.Navigation("ClientEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.Garant", b =>
                {
                    b.HasOne("advans_backend.Models.DemandeCredit", "Demande")
                        .WithMany()
                        .HasForeignKey("IdDemande");

                    b.HasOne("advans_backend.Models.RelationClientGarant", "RelationClientGarant")
                        .WithMany("Garants")
                        .HasForeignKey("IdRelationClientGarant");

                    b.Navigation("Demande");

                    b.Navigation("RelationClientGarant");
                });

            modelBuilder.Entity("advans_backend.Models.Garantie", b =>
                {
                    b.HasOne("advans_backend.Models.DemandeCredit", "Demande")
                        .WithMany()
                        .HasForeignKey("IdDemande");

                    b.HasOne("advans_backend.Models.TypeGarantie", "TypeGarantie")
                        .WithMany("Garanties")
                        .HasForeignKey("IdTypeGarantie");

                    b.Navigation("Demande");

                    b.Navigation("TypeGarantie");
                });

            modelBuilder.Entity("advans_backend.Models.InteractiviteDecideur", b =>
                {
                    b.HasOne("advans_backend.Models.Comite", "Comite")
                        .WithMany()
                        .HasForeignKey("IdComite");

                    b.Navigation("Comite");
                });

            modelBuilder.Entity("advans_backend.Models.PointVente", b =>
                {
                    b.HasOne("advans_backend.Models.ClientEntreprise", "ClientEntreprise")
                        .WithMany()
                        .HasForeignKey("IdClientEntreprise");

                    b.HasOne("advans_backend.Models.TypePointVente", "TypePointVente")
                        .WithMany("PointsVente")
                        .HasForeignKey("IdTypePointVente");

                    b.Navigation("ClientEntreprise");

                    b.Navigation("TypePointVente");
                });

            modelBuilder.Entity("advans_backend.Models.ReferentFamiliaux", b =>
                {
                    b.HasOne("advans_backend.Models.ClientParticulier", "ClientParticulier")
                        .WithMany()
                        .HasForeignKey("IdClientParticulier");

                    b.Navigation("ClientParticulier");
                });

            modelBuilder.Entity("advans_backend.Models.RisqueAnalyse", b =>
                {
                    b.HasOne("advans_backend.Models.DemandeCredit", "Demande")
                        .WithOne("RisqueAnalyse")
                        .HasForeignKey("advans_backend.Models.RisqueAnalyse", "IdDemande")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demande");
                });

            modelBuilder.Entity("advans_backend.Models.Vente", b =>
                {
                    b.HasOne("advans_backend.Models.ClientEntreprise", "ClientEntreprise")
                        .WithMany()
                        .HasForeignKey("IdClientEntreprise");

                    b.Navigation("ClientEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.VisiteManagement", b =>
                {
                    b.HasOne("advans_backend.Models.DemandeCredit", "Demande")
                        .WithOne("VisiteManagement")
                        .HasForeignKey("advans_backend.Models.VisiteManagement", "IdDemande")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demande");
                });

            modelBuilder.Entity("advans_backend.Models.ActiviteEntreprise", b =>
                {
                    b.Navigation("ClientsEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.ActiviteParticulier", b =>
                {
                    b.Navigation("ClientParticuliers");
                });

            modelBuilder.Entity("advans_backend.Models.ClientEntreprise", b =>
                {
                    b.Navigation("Compte");
                });

            modelBuilder.Entity("advans_backend.Models.ClientParticulier", b =>
                {
                    b.Navigation("Compte");
                });

            modelBuilder.Entity("advans_backend.Models.DemandeCredit", b =>
                {
                    b.Navigation("Analyse");

                    b.Navigation("CheckList");

                    b.Navigation("Comite");

                    b.Navigation("RisqueAnalyse");

                    b.Navigation("VisiteManagement");
                });

            modelBuilder.Entity("advans_backend.Models.Produit", b =>
                {
                    b.Navigation("DemandeCredit");
                });

            modelBuilder.Entity("advans_backend.Models.RefAgence", b =>
                {
                    b.Navigation("ClientEntreprises");

                    b.Navigation("ClientParticuliers");
                });

            modelBuilder.Entity("advans_backend.Models.RelationClientGarant", b =>
                {
                    b.Navigation("Garants");
                });

            modelBuilder.Entity("advans_backend.Models.SecteurActiviteEntreprise", b =>
                {
                    b.Navigation("ClientsEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.SecteurActiviteParticulier", b =>
                {
                    b.Navigation("ClientParticuliers");
                });

            modelBuilder.Entity("advans_backend.Models.SituationFamilialeParticulier", b =>
                {
                    b.Navigation("ClientParticuliers");
                });

            modelBuilder.Entity("advans_backend.Models.SituationImmobilierEntreprise", b =>
                {
                    b.Navigation("ClientsEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.SituationImmobilierParticulier", b =>
                {
                    b.Navigation("ClientParticuliers");
                });

            modelBuilder.Entity("advans_backend.Models.SousActiviteEntreprise", b =>
                {
                    b.Navigation("ClientsEntreprise");
                });

            modelBuilder.Entity("advans_backend.Models.SousActiviteParticulier", b =>
                {
                    b.Navigation("ClientParticuliers");
                });

            modelBuilder.Entity("advans_backend.Models.TypeGarantie", b =>
                {
                    b.Navigation("Garanties");
                });

            modelBuilder.Entity("advans_backend.Models.TypePointVente", b =>
                {
                    b.Navigation("PointsVente");
                });
#pragma warning restore 612, 618
        }
    }
}
